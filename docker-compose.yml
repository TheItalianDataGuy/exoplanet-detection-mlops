services:
  fastapi:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mlops-fastapi
    ports:
      - "8000:8000"
    volumes:
      - ./src:/app/src
      - ./models:/app/models
      - ./mlartifacts:/app/mlartifacts
      - ./sample_input.json:/app/sample_input.json
    env_file:
      - .env
    environment:
      MLFLOW_TRACKING_URI: http://mlflow:5000
    depends_on:
      - mlflow
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  mlflow:
    image: ghcr.io/mlflow/mlflow:v3.1.2
    container_name: mlops-mlflow
    ports:
      - "5001:5000"
    volumes:
      - ./mlflow:/mlflow
      - ./mlflow/mlflow.db:/mlflow/mlflow.db 
      - ./mlartifacts:/mlartifacts
    command: [
      "mlflow", "server",
      "--backend-store-uri", "sqlite:///mlflow/mlflow.db",
      "--default-artifact-root", "/mlartifacts",
      "--host", "0.0.0.0",
      "--port", "5000"
    ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 15s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  airflow:
    image: apache/airflow:slim-latest-python3.11
    container_name: mlops-airflow
    ports:
      - "8080:8080"
    volumes:
      - ./airflow:/opt/airflow
      - airflow_logs:/opt/airflow/logs
      - airflow_plugins:/opt/airflow/plugins
    env_file:
      - .env
    environment:
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: sqlite:////opt/airflow/airflow.db
    command: >
      bash -c "
        airflow db migrate &&
        airflow users create \
          --username $$AIRFLOW_WWW_USER_USERNAME \
          --firstname $$AIRFLOW_WWW_USER_FIRSTNAME \
          --lastname $$AIRFLOW_WWW_USER_LASTNAME \
          --role $$AIRFLOW_WWW_USER_ROLE \
          --email $$AIRFLOW_WWW_USER_EMAIL \
          --password $$AIRFLOW_WWW_USER_PASSWORD &&
        airflow webserver --port 8080 & 
        airflow scheduler"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 20s
      timeout: 5s
      retries: 3
    restart: unless-stopped

volumes:
  airflow_logs:
  airflow_plugins:
